// Place your key bindings in this file to overwrite the defaults
[
  {
    "key": "cmd+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "cmd+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "cmd+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "cmd+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "cmd+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "cmd+6",
    "command": "workbench.action.openEditorAtIndex6"
  },
  {
    "key": "cmd+7",
    "command": "workbench.action.openEditorAtIndex7"
  },
  {
    "key": "cmd+8",
    "command": "workbench.action.openEditorAtIndex8"
  },
  {
    "key": "cmd+9",
    "command": "workbench.action.openEditorAtIndex9"
  },
  {
    "key": "ctrl+1",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "ctrl+3",
    "command": "workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "ctrl+cmd+p",
    "command": "projectManager.listProjects"
  },
  {
    "key": "cmd+\\",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+b",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "ctrl+shift+s",
    "command": "settings.cycle.switchTheme"
  },
  {
    "key": "ctrl+shift+g",
    "command": "settings.cycle.switchUI"
  },
  {
    "key": "alt+h",
    "command": "-git.viewFileHistory"
  },
  {
    "key": "cmd+/",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  // if I figure out how to prevent 'show all commans' from popping up after a file/folder is renamed in explorer view i will re-enable this
  // {
  //   "key": "Enter",
  //   "command": "workbench.action.showCommands",
  //   "when": "!filesExplorerFocus && !terminalFocus && vim.mode != 'Insert' && !inputFocus && !renameInputVisible && !textInputFocus"
  // },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "alt+m",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "cmd+shift+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "cmd+shift+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "cmd+shift+g",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+shift+g",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  // Toggle Search
  {
    "key": "cmd+shift+f",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "!editorFocus"
  },
  // Similar to system command
  {
    "key": "cmd+0",
    "command": "workbench.action.zoomReset",
    "when": "editorFocus"
  },
  // Inteferes with system close all windows command
  {
    "key": "alt+cmd+w",
    "command": "-toggleSearchEditorWholeWord",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+cmd+w",
    "command": "-workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+w",
    "command": "-toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+w",
    "command": "-toggleSearchWholeWord",
    "when": "searchViewletFocus"
  },
  // Using ctrl-k to delete right. Not sure what this command even does.
  {
    "key": "ctrl+k",
    "command": "-extension.vim_ctrl+k",
    "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
  },
  // Disable confusing quick open in group and use standard tab switching
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  // Change goto symbol in workspace from confusing new tab button
  {
    "key": "cmd+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "alt+t",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "pagedown",
    "command": "vim.remap",
    "when": "inputFocus && vim.mode == 'Normal' || inputFocus && vim.mode == 'Visual')",
    "args": {
      "after": ["<C-f>"]
    }
  },
  {
    "key": "shift+pagedown",
    "command": "vim.remap",
    "when": "inputFocus && vim.mode == 'Normal' || inputFocus && vim.mode == 'Visual')",
    "args": {
      "after": ["<C-d>"]
    }
  },
  {
    "key": "pageup",
    "command": "vim.remap",
    "when": "inputFocus && vim.mode == 'Normal' || inputFocus && vim.mode == 'Visual')",
    "args": {
      "after": ["<C-b>"]
    }
  },
  {
    "key": "shift+pageup",
    "command": "vim.remap",
    "when": "inputFocus && vim.mode == 'Normal' || inputFocus && vim.mode == 'Visual')",
    "args": {
      "after": ["<C-u>"]
    }
  },
  {
    "key": "shift+home",
    "command": "vim.remap",
    "when": "inputFocus && vim.mode == 'Normal' || inputFocus && vim.mode == 'Visual')",
    "args": {
      "after": ["0"]
    }
  }
  // {
  //   "key": "home",
  //   "command": "vim.remap",
  //   "when": "inputFocus && vim.mode == 'Normal' || inputFocus && vim.mode == 'Visual')",
  //   "args": {
  //     "after": ["t"]
  //   }
  // },
  // {
  //   "key": "end",
  //   "command": "vim.remap",
  //   "when": "inputFocus && vim.mode == 'Normal' || inputFocus && vim.mode == 'Visual')",
  //   "args": {
  //     "after": ["a"]
  //   }
  // }
  // ex. vim mappings. note - map re-mapped commads, not original commands (yank --> 'm', change --> 'd', so forth).
  // {
  //   "key": "alt+...",
  //   "command": "vim.remap",
  //   "when": "inputFocus && vim.mode == 'Normal'",
  //   "args": {
  //     "after": ["m", "m"]
  //   }
  // },
  // {
  //   "key": "alt+...",
  //   "command": "vim.remap",
  //   "when": "inputFocus && vim.mode == 'Normal' || inputFocus && vim.mode == 'Visual')",
  //   "args": {
  //     "after": ["d", "d"]
  //   }
  // }
]
