#!/bin/sh

system_type=$(uname -s)

if [ "$system_type" = "Darwin" ]; then
  # Copy fonts to ~/Library/Fonts
  echo "Copying fonts to user folder"
  mkdir -p ~/Downloads
  # uri generated on Dropbox website using 'copy share link' button for target folder, then change dl param to 1.
  curl --http1.1 -sL "https://www.dropbox.com/sh/tmwgqdh7yh4nr61/AAC4CzYolyMUwN_RY209Lhjda?dl=1" --output ~/Downloads/yadm-extra-fonts.zip
  # only copy newer files and overwrite. q will copy quietly (qq for very quiet). Specify target directory with d. -x / should suppress warnings during unzip, see https://stackoverflow.com/questions/21322416/unzip-warning-and-mapname for more info.
  unzip -quo ~/Downloads/yadm-extra-fonts.zip -x / -d ~/Library/Fonts/
  rm ~/Downloads/yadm-extra-fonts.zip

  # Copy services to ~/Library/Services
  echo "Copying Services to user folder"
  # uri generated on Dropbox website using 'copy share link' button for target folder, then change dl param to 1.
  curl --http1.1 -sL "https://www.dropbox.com/sh/imjnxu278nmrn18/AADQ7pp4XycdP7igy0ARa0R2a?dl=1" --output ~/Downloads/yadm-extra-services.zip
  # only copy newer files and overwrite. q will copy quietly (qq for very quiet). Specify target directory with d. -x / should suppress warnings during unzip, see https://stackoverflow.com/questions/21322416/unzip-warning-and-mapname for more info.
  unzip -quo ~/Downloads/yadm-extra-services.zip -x / -d ~/Library/Services/
  rm ~/Downloads/yadm-extra-services.zip
elif [ "$system_type" = "Linux" ]; then
  # Copy fonts to ~/.fonts
  echo "Copying fonts to user folder"
  mkdir -p ~/Downloads
  mkdir -p ~/.fonts
  # uri generated on Dropbox website using 'copy share link' button for target folder, then change dl param to 1.
  curl --http1.1 -sL "https://www.dropbox.com/sh/tmwgqdh7yh4nr61/AAC4CzYolyMUwN_RY209Lhjda?dl=1" --output ~/Downloads/yadm-extra-fonts.zip
  # only copy newer files and overwrite. q will copy quietly (qq for very quiet). Specify target directory with d. -x / should suppress warnings during unzip, see https://stackoverflow.com/questions/21322416/unzip-warning-and-mapname for more info.
  unzip -quo ~/Downloads/yadm-extra-fonts.zip -x / -d ~/.fonts/
  rm ~/Downloads/yadm-extra-fonts.zip
elif [ "$system_type" = "FreeBSD" ]; then
  # Copy fonts to ~/.fonts
  echo "Copying fonts to user folder"
  mkdir -p ~/Downloads
  mkdir -p ~/.fonts
  # uri generated on Dropbox website using 'copy share link' button for target folder, then change dl param to 1.
  curl --http1.1 -sL "https://www.dropbox.com/sh/tmwgqdh7yh4nr61/AAC4CzYolyMUwN_RY209Lhjda?dl=1" --output ~/Downloads/yadm-extra-fonts.zip
  # only copy newer files and overwrite. q will copy quietly (qq for very quiet). Specify target directory with d. -x / should suppress warnings during unzip, see https://stackoverflow.com/questions/21322416/unzip-warning-and-mapname for more info.
  unzip -quo ~/Downloads/yadm-extra-fonts.zip -x / -d ~/.fonts/
  rm ~/Downloads/yadm-extra-fonts.zip
fi

# install Vim plugin manager (vim-plug)
if [ ! -f "$HOME/.vim/autoload/plug.vim" ]; then
  curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi
# install Vim plugins
if command -v vim >/dev/null 2>&1; then
  echo "Bootstraping Vim"
  vim '+PlugUpdate' '+PlugClean!' '+PlugUpdate' '+qall'
fi

# setup NeoVim config directories
if [ ! -d "$HOME/.config/nvim/lua" ]; then
  mkdir -p $HOME/.config/nvim/lua
fi
# install NeoVim plugin manager (vim-plug)
if [ ! -f "$HOME/.local/share/nvim/site/autoload/plug.vim" ]; then
  sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
fi
# install NeoVim plugins
if command -v nvim >/dev/null 2>&1; then
  echo "Bootstraping NeoVim"
  nvim '+PlugUpdate' '+PlugClean!' '+PlugUpdate' '+qall'
fi

# install zplug from source
if [ ! -d "$HOME/.zplug" ]; then
  echo "Installing Zplug"
  export ZPLUG_HOME=$HOME/.zplug
  mkdir -p $ZPLUG_HOME
  git clone -q https://github.com/zplug/zplug $ZPLUG_HOME
  #source $ZPLUG_HOME/init.zsh
  source $HOME/.zshrc
  zplug install
fi


# Make all executable files (excluding templates and editor backups) in the
# ~/.config/yadm/bootstrap.d directory when run.
# See https://raw.githubusercontent.com/TheLocehiliosan/yadm/master/contrib/bootstrap/bootstrap-in-dir for more info.

set -eu

# Directory to look for bootstrap executables in
BOOTSTRAP_D="${BASH_SOURCE[0]}.d"

if [[ ! -d "$BOOTSTRAP_D" ]]; then
    echo "Error: bootstrap directory '$BOOTSTRAP_D' not found" >&2
    exit 1
fi

find -L "$BOOTSTRAP_D" -type f | sort | while IFS= read -r bootstrap; do
    if [[ -x "$bootstrap" && ! "$bootstrap" =~ "##" && ! "$bootstrap" =~ "~$" ]]; then
        if ! "$bootstrap"; then
            echo "Error: bootstrap '$bootstrap' failed" >&2
            exit 1
        fi
    fi
done